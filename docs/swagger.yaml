basePath: /
definitions:
  forms.CustomerRegister:
    properties:
      name:
        type: string
      phone_number:
        type: string
    type: object
  forms.CustomerReservation:
    properties:
      table_number:
        type: integer
    type: object
  forms.MenuCreate:
    properties:
      name:
        type: string
      price:
        type: number
      type:
        type: string
    type: object
  models.Customer:
    properties:
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
    required:
    - name
    - phone_number
    type: object
  models.Menu:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      type:
        type: string
    required:
    - name
    - type
    type: object
  models.Order:
    properties:
      amount:
        type: number
      customer_id:
        type: integer
      details:
        items:
          $ref: '#/definitions/models.OrderDetail'
        type: array
      id:
        type: integer
      status:
        type: string
      table_number:
        type: integer
    required:
    - table_number
    type: object
  models.OrderDetail:
    properties:
      id:
        type: integer
      menu_id:
        type: integer
      order_id:
        type: integer
    required:
    - menu_id
    type: object
host: localhost:3000
info:
  contact:
    email: surya.iksanudin@gmail.com
    name: Muhamad Surya Iksanudin
  description: This Repository is only used for testing purpose
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: BTPN Syariah Test Code
  version: "1.0"
paths:
  /customers:
    post:
      consumes:
      - application/json
      description: Register new customer
      parameters:
      - description: Customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/forms.CustomerRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: Register cew customer
      tags:
      - Customer
  /customers/{id}:
    get:
      consumes:
      - application/json
      description: Get customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
      summary: Get customer by ID
      tags:
      - Customer
  /customers/{id}/reservation:
    post:
      consumes:
      - application/json
      description: Customer reservation
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Customer
        in: body
        name: reservation
        required: true
        schema:
          $ref: '#/definitions/forms.CustomerReservation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Customer Reservation
      tags:
      - Customer
  /menus:
    get:
      consumes:
      - application/json
      description: Get all menu
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Menu'
            type: array
      summary: Get all menu
      tags:
      - Menu
    post:
      consumes:
      - application/json
      description: 'Create new menu (type: drink, main_course, starter, side_dish,
        snack)'
      parameters:
      - description: Menu
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/forms.MenuCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Menu'
      summary: Create new menu
      tags:
      - Menu
  /menus/{id}:
    get:
      consumes:
      - application/json
      description: Get menu by ID
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Menu'
            type: array
      summary: Get menu by ID
      tags:
      - Menu
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: Get order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: Get order by ID
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update order (assign/update menu to order)
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Update order
      tags:
      - Order
  /orders/{id}/cancel:
    put:
      consumes:
      - application/json
      description: Cancel reservation (only for reservation - pending - order)
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Cancel reservation
      tags:
      - Order
  /orders/{id}/pay:
    put:
      consumes:
      - application/json
      description: Order payment - completed - (only for served - served - order)
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Order payment
      tags:
      - Order
  /orders/{id}/prepare:
    put:
      consumes:
      - application/json
      description: Send order to kitchen (only for reservation - pending - order)
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Send order to kitchen
      tags:
      - Order
  /orders/{id}/rollback:
    put:
      consumes:
      - application/json
      description: Send back to waiter because can't be created (only for prapare
        - prepare - order)
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Send back to waiter
      tags:
      - Order
  /orders/{id}/served:
    put:
      consumes:
      - application/json
      description: Serving order (only for prapare - prepare - order)
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Serving order
      tags:
      - Order
swagger: "2.0"
